#!/usr/bin/env python 
# -*- coding:utf-8 -*-
__author__ = 'the king of north'
# 选择数据
import numpy as np
import pandas as pd

data_index = pd.date_range("2019-04-24", periods=13)
# print(data_index)

df = pd.DataFrame(np.random.randn(13, 4), index=data_index, columns=list("ABCD"))
# print(df)
#               A         B         C         D
# 2019-04-24  1.754381 -0.272109 -1.243734 -0.520965
# 2019-04-25 -0.328361 -1.205577  0.095792  0.110621
# 2019-04-26  1.213440  0.723822 -1.244997 -0.345708
# 2019-04-27  0.582862 -0.758489  0.857138 -0.118429
# 2019-04-28 -1.098827  0.160664 -1.011211 -0.388762
# 2019-04-29 -1.061047  0.567438  0.658384 -1.173885
# 2019-04-30 -1.471152 -0.672050 -3.762267 -0.275321
# 2019-05-01  0.985271 -1.044863 -1.380813 -0.547662
# 2019-05-02  0.728815 -0.500105 -0.695089  0.232392
# 2019-05-03  0.595600  0.507634  0.716377 -0.076859
# 2019-05-04 -0.483578 -0.538878  0.238723 -0.615091
# 2019-05-05  0.078727 -0.273270 -1.470174 -2.417821
# 2019-05-06 -0.442800  1.758056  0.832585 -0.101728

# 2 选择数据
print(df['A'])

# 3 数组切片
# print(df[1:4])

# 5 使用行标签指定输出的行
# print(df['2019-04-24':'2019-04-26'])

# 6 loc方法是帮助选择数据的，比如选择索引位置为0的一行数据
# print(df.loc[data_index[0]])

# 7 选择多列数据方法
# print(df.loc[:, ['A', 'B']])

# 8 选择局部数据，是行和列的交叉区域
# print(df.loc['2019-04-24':'2019-04-27', ['A', 'B']])

# 9 只选择某一个数据，可以指定行和列
# print(df.loc[data_index[0], ['A']])

# 10 at方法专门用于获取某个值
print(df.at[data_index[0], 'A'])
# 1.754380519094846
